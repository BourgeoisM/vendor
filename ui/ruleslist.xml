<Ui xmlns="http://www.blizzard.com/wow/ui/" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://www.blizzard.com/wow/ui/..\FrameXML\UI.xsd">

    <Frame name = "BaseVendorSimpleRuleTemplate" virtual="true" visble="false" parentArray="Rules" enableMouse="true">
        <Size x="250" y="64"/>
        <Layers>
            <Layer level="BACKGROUND">
                <Texture parentKey="Highlight" hidden="true">
                    <Color r="1.0" g="1.0" b="1.0" a="0.15"/>
                    <Anchors>
                        <Anchor point="TOPLEFT" realtivePoint="TOPLEFT"/>
                        <Anchor point="BOTTOMRIGHT" realtivePoint="BOTTOMRIGHT"/>
                    </Anchors>
                </Texture>
                <Texture ParentKey="Divider">
                    <Size x="1" y="1"/>
                    <Color r="0.6" g="0.6" b="0.6" a="0.3"/>
                    <Anchors>
                        <Anchor point="BOTTOMLEFT" x="16" />
                        <Anchor point="BOTTOMRIGHT" x="-16" />
                    </Anchors>
                </Texture>

                <!-- Error indicator (meaning the rule has an error -->
                <Texture parentKey="errorBack" hidden="true">
                    <Color r="1.0" g="0" b="0" a="0.15"/>
                </Texture>
                <FontString parentKey="hasError" text="!" inherits="Game30Font" justifyH="LEFT" justifyV="BOTTOM" hidden="true">
                    <Color r="1.0" g="0.0" b="0" a="9.5"/>
                    <Size x="32" y="60"/>
                    <Anchors>
                        <Anchor point="BOTTOMLEFT" relativePoint="BOTTOMLEFT" x="8" y="2"/>                        
                    </Anchors>
                </FontString>
            </Layer>
        </Layers>
        <Frames>
            <CheckButton name="$parentEnabled" parentKey="Enabled" inherits="OptionsBaseCheckButtonTemplate">
                <Anchors>
                    <Anchor point="TOPLEFT" relativeKey="$parent" relativePoint="TOPLEFT" x="2" y="-2"/>
                </Anchors>
                <Scripts>
                    <OnClick>if (self:GetParent().ToggleRuleState) then self:GetParent():ToggleRuleState() end</OnClick>
                </Scripts>
            </CheckButton>
            <Button parentKey="MoveUp" hidden="true">
                <Size x="24" y="24"/>
                <Anchors>
                    <Anchor point="BOTTOMRIGHT" relativePoint="BOTTOMRIGHT" x="-1" y="32"/>
                </Anchors>
				<NormalTexture file="Interface\ChatFrame\UI-ChatIcon-ScrollUp-Up"/>
				<PushedTexture file="Interface\ChatFrame\UI-ChatIcon-ScrollUp-Down"/>
				<DisabledTexture file="Interface\ChatFrame\UI-ChatIcon-ScrollUp-Disabled"/>
				<HighlightTexture file="Interface\Buttons\UI-Common-MouseHilight" alphaMode="ADD"/>
                <Scripts>
                    <OnClick>
                        PlaySound(SOUNDKIT.IG_MAINMENU_OPTION_CHECKBOX_ON);
                        Vendor.RulesList.MoveRule(self:GetParent():GetParent(), self:GetParent(), -1)
                    </OnClick>
                </Scripts>
            </Button>
			<Button parentKey="MoveDown" hidden="true">
                <Size x="24" y="24"/>
				<Anchors>
					<Anchor point="TOPRIGHT" relativePoint="BOTTOMRIGHT" x="-1" y="32"/>
				</Anchors>
				<NormalTexture file="Interface\ChatFrame\UI-ChatIcon-ScrollDown-Up"/>
				<PushedTexture file="Interface\ChatFrame\UI-ChatIcon-ScrollDown-Down"/>
				<DisabledTexture file="Interface\ChatFrame\UI-ChatIcon-ScrollDown-Disabled"/>
				<HighlightTexture file="Interface\Buttons\UI-Common-MouseHilight" alphaMode="ADD"/>
				<Scripts>
					<OnClick>
						PlaySound(SOUNDKIT.IG_MAINMENU_OPTION_CHECKBOX_ON);
                        Vendor.RulesList.MoveRule(self:GetParent():GetParent(), self:GetParent(), 1)
					</OnClick>
				</Scripts>
			</Button>
        </Frames>
        <Scripts>
            <OnEnter>
                --self.Highlight:Show()
                Vendor.RulesList.UpdateMoveButtons(self)
            </OnEnter>
            <OnLeave>
                if (not self:IsMouseOver()) then
                    Vendor.RulesList.HideMoveButtons(self)
                    --self.Highlight:Hide()
                end
            </OnLeave>
            <OnMouseUp>Vendor.RulesList.OnRuleItemMouseUp(self, button)</OnMouseUp>
        </Scripts>
    </Frame>

    <Frame name="VendorSimpleRuleTemplate" virtual="true" visble="false" inherits="BaseVendorSimpleRuleTemplate">
        <Size x="250" y="64"/>
        <Layers>
            <Layer level="ARTWORK">
                <FontString parentKey="RuleName" inherits="GameFontHighlightLarge" justifyH="LEFT">
                    <Anchors>
                        <Anchor point="TOPLEFT"  x="32" y="-4"/>
                        <Anchor point="TOPRIGHT" x="-28" y="-24"/>
                    </Anchors>
                </FontString>
                <FontString parentKey="RuleDescription" inherits="GameFontNormalSmall" justifyH="LEFT" justifyV="TOP"  wordwrap="true">
                    <Anchors>
                        <Anchor point="TOPLEFT" relativeKey="$parent.RuleName" relativePoint="BOTTOMLEFT" x="0" y="-4"/>
                        <Anchor point="BOTTOMRIGHT" relativePoint="BOTTOMRIGHT" x="-28" y="4"/>
                    </Anchors>
                </FontString>
            </Layer>
        </Layers>
    </Frame>

    <Frame name="VendorRuleTemplateWithItemLevel" virtual="true" visble="false"  inherits="BaseVendorSimpleRuleTemplate">
        <Size x="250" y="64"/>
        <Layers>
            <Layer level="ARTWORK">
                <FontString parentKey="RuleName" inherits="GameFontHighlightLarge" justifyH="LEFT">
                    <Anchors>
                        <Anchor point="TOPLEFT"  x="32" y="-4"/>
                        <Anchor point="BOTTOMRIGHT" relativePoint="TOPRIGHT" x="-28" y="-24"/>
                    </Anchors>
                </FontString>
                <FontString parentKey="RuleDescription" inherits="GameFontNormalSmall" justifyH="LEFT" justifyV="TOP" wordwrap="true">
                    <Anchors>
                        <Anchor point="TOPLEFT" relativeKey="$parent.RuleName" relativePoint="BOTTOMLEFT" x="0" y="-4"/>
                        <Anchor point="BOTTOMRIGHT" relativePoint="BOTTOMRIGHT" x="-96" y="4"/>
                    </Anchors>
                </FontString>
            </Layer>
        </Layers>
        <Frames>
            <EditBox name="$parentItemLevel" parentKey="ItemLevel" inherits="InputBoxTemplate" letters="4" numeric="true" autoFocus="false" multiLne="false" enabled="false">
                <Size x="58" y="18"/>
                <Anchors>
                    <Anchor point="BOTTOMRIGHT" relativePoint="BOTTOMRIGHT" x="-28" y="8"/>
                </Anchors>
                <Layers>
                    <Layer level="ARTWORK">
                        <FontString parentKey="Label" justifyH="LEFT" justifyV="MIDDLE" inherits="GameFontNormalSmall" text="ITEM_LEVEL_LABEL">
                            <Size x="100" y="12"/>
                            <Anchors>
                                <Anchor point="BOTTOMLEFT" relativePoint="TOPLEFT" y="2"/>
                            </Anchors>
                        </FontString>
                    </Layer>
                </Layers>
                <Scripts>
                    <OnShow>self.Label:SetTextColor(GRAY_FONT_COLOR.r, GRAY_FONT_COLOR.g, GRAY_FONT_COLOR.b)</OnShow>
                    <OnDisable>
                        self:SetTextColor(GRAY_FONT_COLOR.r, GRAY_FONT_COLOR.g, GRAY_FONT_COLOR.b)
                        self.Label:SetTextColor(GRAY_FONT_COLOR.r, GRAY_FONT_COLOR.g, GRAY_FONT_COLOR.b)
                    </OnDisable>
                    <OnEnable>
                        self:SetTextColor(HIGHLIGHT_FONT_COLOR.r, HIGHLIGHT_FONT_COLOR.g, HIGHLIGHT_FONT_COLOR.b)
                        self.Label:SetTextColor(HIGHLIGHT_FONT_COLOR.r, HIGHLIGHT_FONT_COLOR.g, HIGHLIGHT_FONT_COLOR.b)
                    </OnEnable>
                </Scripts>
            </EditBox>
        </Frames>
    </Frame>

    <Frame name="VendorSystemRuleList" virtual="true" enableMouse="true">
        <Frames>
            <ScrollFrame name="$parentView" parentKey="View" inherits="FauxScrollFrameTemplate">
                <Anchors>
                    <Anchor point="TOPLEFT" relativePoint="TOPLEFT" x="6" y="-6"/>
                    <Anchor point="TOPRIGHT" relativePoint="TOPRIGHT" x="-28" y="-6"/>
                    <Anchor point="BOTTOMLEFT" relativePoint="BOTTOMLEFT" x="6" y="6"/>
                    <Anchor point="BOTTOMRIGHT" relativePoint="BOTTOMRIGHT" x="-28" y="6"/>>
                </Anchors>
                <Layers>
                    <Layer level="BACKGROUND">
                        <Texture>
                            <Size x="20" y="20"/>
                            <Color r="0" g="0" b="0" a="0.5"/>
                            <Anchors>
                                <Anchor point="TOPLEFT" relativePoint="TOPRIGHT" x="4" y="-2"/>
                                <Anchor point="BOTTOMLEFT" relativePoint="BOTTOMRIGHT" x="4" y="2"/>
                            </Anchors>
                        </Texture>
                    </Layer>
                </Layers>
                <Scripts>
                    <OnVerticalScroll>
                        local parent = self:GetParent()
                        FauxScrollFrame_OnVerticalScroll(self, offset, parent.RuleFrameSize, function() Vendor.RulesUI.UpdateRuleList(parent) end)
                    </OnVerticalScroll>
                    <OnShow>Vendor.RulesUI.UpdateRuleList(self:GetParent())</OnShow>
                </Scripts>
            </ScrollFrame>
        </Frames>
    </Frame>

    <Frame name="VendorSellSystemRuleList" inherits="VendorSystemRuleList" virtual="true">
        <Scripts>
            <OnLoad>
                Vendor.RulesUI.InitRuleList(self, Vendor.c_RuleType_Sell, Vendor.SystemRules.Sell)
            </OnLoad>
        </Scripts>
    </Frame>

    <Frame name="VendorKeepSystemRuleList" inherits="VendorSystemRuleList" virtual="true">
        <Scripts>
            <OnLoad>
                Vendor.RulesUI.InitRuleList(self, Vendor.c_RuleType_Keep, Vendor.SystemRules.Keep)
            </OnLoad>
        </Scripts>
    </Frame>

    <Frame name="VendorCustomRuleList" inherits="VendorSystemRuleList" virtual="true">
        <Scripts>
            <OnLoad>
                Vendor.RulesUI.InitRuleList(self, Vendor.c_RuleType_Custom, Vendor_CustomRuleDefinitions or {});
            </OnLoad>
        </Scripts>
    </Frame>
</Ui>
